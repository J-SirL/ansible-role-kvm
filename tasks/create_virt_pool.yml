---
# using community.libvirt.virt_pool
#ansible-galaxy collection install community.libvirt
# Facts will be available as 'ansible_libvirt_pools'
  - name: gather facts on existing virsh pool
    community.libvirt.virt_pool:
      command: facts
      uri: "{{ libvirt_uri }}"

  - name: add a storage pool for storing libvirt images if Pool doesn't already exists
    community.libvirt.virt_pool:
      command: define
      # looks like setting name here is a redundant, the name is anyways taken from the template xml file, but should set it to make virt_pool module happy.
      name: "{{ kvm_image_pool_name }}"
      xml: '{{ lookup("template", "pool/pool.xml.j2") }}'
      uri: "{{ libvirt_uri }}"
    when: kvm_image_pool_name not in ansible_libvirt_pools

  - name: create a kvm_image_pool_dir
    ansible.builtin.file:
      path: "{{ kvm_image_pool_dir }}"
      owner: jsorell #"{{ ansible_user }}"
      group: libvirt
      recurse: yes
      mode: '0755'
    become: true

  - name: Set SELinux context for KVM storage
    sefcontext:
      target: "{{ kvm_image_pool_dir }}"
      setype: "{{ kvm_pool_dir_selinux_context }}"
      state: present
    when: ansible_selinux.status == 'enabled'

  - name: Apply new SELinux file context to filesystem path "{{ kvm_image_pool_dir }}"
    ansible.builtin.command: restorecon -vR "{{ kvm_image_pool_dir }}"

# We should gather facts again so that the newly created pool is updated to 'ansible_libvirt_pools'
  - name: gather facts on existing virsh pool
    community.libvirt.virt_pool:
      command: facts
      uri: "{{ libvirt_uri }}"

  - block:
    - name: build the storage pool.
      community.libvirt.virt_pool:
        command: build
        name: "{{ kvm_image_pool_name }}"
        uri: "{{ libvirt_uri }}"
  
    - name: start the storage pool.
      community.libvirt.virt_pool:
        command: create
        name: "{{ kvm_image_pool_name }}"
        uri: "{{ libvirt_uri }}"
    when: ansible_libvirt_pools["{{kvm_image_pool_name}}"].state != "active"

  - name: autostart the storage pool
    community.libvirt.virt_pool:
      autostart: yes      
      name: "{{ kvm_image_pool_name }}"
      uri: "{{ libvirt_uri }}"

  - name: ensure that the pool is active
    community.libvirt.virt_pool:
      state: active
      name: "{{ kvm_image_pool_name }}"
      uri: "{{ libvirt_uri }}"